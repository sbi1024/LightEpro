<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.LightEpro.sch.mapper.SchMapper002">
    <select id="selectCalendarType" resultType="string">
        /* selectCalendarType */
        SELECT IFNULL(MAX(TSC.CAL_TYPE), '') AS calType
        FROM T_SC_CAL TSC
        WHERE 1 = 1
          AND TSC.CAL_SEQ = #{calendar.calSeq}
          AND TSC.USE_YND = 'Y'
    </select>

    <select id="selectScheduleCount" parameterType="com.example.LightEpro.sch.dto.sch002.SchRqDto002" resultType="int">
        /* selectScheduleCount */
        SELECT COUNT(1)
        FROM T_SC_SCH TSS
        WHERE 1 = 1
          AND TSS.SCHM_SEQ = #{schedule.schmSeq}
          AND TSS.SCH_SEQ = #{schedule.schSeq}
          AND TSS.USE_YND = 'Y'
    </select>

    <select id="selectOriginRegistrant" resultType="int">
        /* selectOriginRegistrant */
        SELECT IFNULL(MAX(TSSU.CDE_SEQ), 0) AS cdeSeq
        FROM T_SC_SCH TSS
                 INNER JOIN T_SC_SCH_USER TSSU
                            ON TSS.SCHM_SEQ = TSSU.SCHM_SEQ
                                AND TSS.SCH_SEQ = TSSU.SCH_SEQ
                                AND TSS.CREATE_SEQ = TSSU.CDE_SEQ
                                AND TSSU.CDE_TYPE = 'E'
                                AND TSS.USE_YND = 'Y'
                                AND TSSU.USE_YND = 'Y'
        WHERE 1 = 1
          AND TSS.SCHM_SEQ = #{schedule.schmSeq}
          AND TSS.SCH_SEQ = #{schedule.schSeq}
    </select>

    <select id="selectParticipants" resultType="com.example.LightEpro.sch.dto.sch002.SchRqDto002$Participant">
        /* selectParticipants */
        SELECT IFNULL(TSSU.CDE_SEQ, 0)            AS cdeSeq,
               IFNULL(TSSU.CDE_TYPE, '')          AS cdeType
        FROM T_SC_SCH_USER TSSU
        WHERE 1 = 1
          AND TSSU.SCHM_SEQ = #{schedule.schmSeq}
          AND TSSU.SCH_SEQ = #{schedule.schSeq}
          AND TSSU.USE_YND = 'Y'
          AND TSSU.SCH_PARTITION_TYPE = '10'
    </select>

    <select id="selectDisclosureScopes" resultType="com.example.LightEpro.sch.dto.sch002.SchRqDto002$DisclosureScope">
        /* selectDisclosureScopes */
        SELECT IFNULL(TSSU.CDE_SEQ, 0)            AS cdeSeq,
               IFNULL(TSSU.CDE_TYPE, '')          AS cdeType
        FROM T_SC_SCH_USER TSSU
        WHERE 1 = 1
          AND TSSU.SCHM_SEQ = #{schedule.schmSeq}
          AND TSSU.SCH_SEQ = #{schedule.schSeq}
          AND TSSU.USE_YND = 'Y'
          AND TSSU.SCH_PARTITION_TYPE = '20'
    </select>

    <update id="updateSchedule" parameterType="com.example.LightEpro.sch.dto.sch002.SchRqDto002">
        /* updateSchedule */
        UPDATE T_SC_SCH TSS
        SET TSS.START_DATE       = #{schedule.startDate},
            TSS.START_DATE_YEAR  = #{schedule.startDateYear},
            TSS.START_DATE_MONTH = #{schedule.startDateMonth},
            TSS.END_DATE         = #{schedule.endDate},
            TSS.END_DATE_YEAR    = #{schedule.endDateYear},
            TSS.END_DATE_MONTH   = #{schedule.endDateMonth},
            TSS.ALL_DAY_YN       = #{schedule.alldayYn},
            TSS.SCH_TITLE        = #{schedule.schTitle},
            TSS.SCH_CONTENT      = #{schedule.schContent},
            TSS.MODIFY_DATE      = NOW(),
            TSS.MODIFY_SEQ       = #{user.userSeq}
        WHERE 1 = 1
          AND TSS.SCHM_SEQ = #{schedule.schmSeq}
          AND TSS.SCH_SEQ = #{schedule.schSeq}
          AND TSS.USE_YND = 'Y'
    </update>

    <insert id="insertRequestNonMatchParticipants" parameterType="com.example.LightEpro.sch.dto.sch002.SchRqDto002">
        /* insertRequestNonMatchParticipants */
        INSERT INTO T_SC_SCH_USER (SCHM_SEQ,
                                    SCH_SEQ,
                                    CDE_SEQ,
                                    CDE_TYPE,
                                    SCH_PARTITION_TYPE,
                                    SCH_AUTORITY,
                                    CAL_SEQ,
                                    USE_YND,
                                    CREATE_DATE,
                                    CREATE_SEQ)
        VALUES <foreach collection="requestNonMatchParticipants" item="requestNonMatchParticipant" separator=",">
                (
                    #{schedule.schmSeq},
                    #{schedule.schSeq},
                    #{requestNonMatchParticipant.cdeSeq},
                    #{requestNonMatchParticipant.cdeType},
                    '10',
                    'W',
                    '0',
                    'Y',
                    NOW(),
                    #{user.userSeq}
                )
            </foreach>
        ON DUPLICATE KEY UPDATE
        USE_YND = 'Y',
        CREATE_DATE = NOW(),
        CREATE_SEQ = #{user.userSeq},
        MODIFY_DATE = NULL,
        MODIFY_SEQ = NULL
    </insert>

    <update id="updateOriginMatchParticipants">
        /* updateOriginMatchParticipants */
        UPDATE T_SC_SCH_USER TSSU
        SET TSSU.MODIFY_DATE = NOW(),
            TSSU.MODIFY_SEQ = #{user.userSeq}
        WHERE 1 = 1
         AND (
                 <foreach collection="originMatchParticipants" item="originMatchParticipant" open="(" separator="OR" close=")">
                       TSSU.SCHM_SEQ = #{schedule.schmSeq}
                       AND TSSU.SCH_SEQ = #{schedule.schSeq}
                       AND TSSU.CDE_SEQ = #{originMatchParticipant.cdeSeq}
                       AND TSSU.CDE_TYPE = #{originMatchParticipant.cdeType}
                       AND TSSU.SCH_PARTITION_TYPE = 10
                       AND TSSU.USE_YND = 'Y'
                 </foreach>
             )
    </update>

    <update id="updateOriginNonMatchParticipants">
        /* updateOriginNonMatchParticipants */
        UPDATE T_SC_SCH_USER TSSU
        SET TSSU.USE_YND = 'N' ,
            TSSU.MODIFY_DATE = NOW(),
            TSSU.MODIFY_SEQ = #{user.userSeq}
        WHERE 1 = 1
         AND (
                 <foreach collection="originNonMatchParticipants" item="originNonMatchParticipant" open="(" separator="OR" close=")">
                       TSSU.SCHM_SEQ = #{schedule.schmSeq}
                       AND TSSU.SCH_SEQ = #{schedule.schSeq}
                       AND TSSU.CDE_SEQ = #{originNonMatchParticipant.cdeSeq}
                       AND TSSU.CDE_TYPE = #{originNonMatchParticipant.cdeType}
                       AND TSSU.SCH_PARTITION_TYPE = 10
                       AND TSSU.USE_YND = 'Y'
                 </foreach>
             )
    </update>



    <insert id="insertRequestNonMatchDisclosureScopes" parameterType="com.example.LightEpro.sch.dto.sch002.SchRqDto002">
        /* insertRequestNonMatchDisclosureScopes */
        INSERT INTO T_SC_SCH_USER (SCHM_SEQ,
                                   SCH_SEQ,
                                   CDE_SEQ,
                                   CDE_TYPE,
                                   SCH_PARTITION_TYPE,
                                   SCH_AUTORITY,
                                   CAL_SEQ,
                                   USE_YND,
                                   CREATE_DATE,
                                   CREATE_SEQ)
        VALUES <foreach collection="requestNonMatchDisclosureScopes" item="requestNonMatchDisclosureScope" separator=",">
                (
                    #{schedule.schmSeq},
                    #{schedule.schSeq},
                    #{requestNonMatchDisclosureScope.cdeSeq},
                    #{requestNonMatchDisclosureScope.cdeType},
                    '20',
                    'S',
                    '0',
                    'Y',
                    NOW(),
                    #{user.userSeq}
                )
              </foreach>
        ON DUPLICATE KEY UPDATE
        USE_YND = 'Y',
        CREATE_DATE = NOW(),
        CREATE_SEQ = #{user.userSeq},
        MODIFY_DATE = NULL,
        MODIFY_SEQ = NULL
    </insert>

    <update id="updateOriginMatchDisclosureScopes">
        /* updateOriginMatchDisclosureScopes */
        UPDATE T_SC_SCH_USER TSSU
        SET TSSU.MODIFY_DATE = NOW(),
            TSSU.MODIFY_SEQ = #{user.userSeq}
        WHERE 1 = 1
         AND (
                 <foreach collection="originMatchDisclosureScopes" item="originMatchDisclosureScope" open="(" separator="OR" close=")">
                       TSSU.SCHM_SEQ = #{schedule.schmSeq}
                       AND TSSU.SCH_SEQ = #{schedule.schSeq}
                       AND TSSU.CDE_SEQ = #{originMatchDisclosureScope.cdeSeq}
                       AND TSSU.CDE_TYPE = #{originMatchDisclosureScope.cdeType}
                       AND TSSU.SCH_PARTITION_TYPE = 20
                       AND TSSU.USE_YND = 'Y'
                 </foreach>
             )
    </update>

    <update id="updateOriginNonMatchDisclosureScopes">
        /* updateOriginNonMatchDisclosureScopes */
        UPDATE T_SC_SCH_USER TSSU
        SET TSSU.USE_YND = 'N' ,
            TSSU.MODIFY_DATE = NOW(),
            TSSU.MODIFY_SEQ = #{user.userSeq}
        WHERE 1 = 1
         AND (
                 <foreach collection="originNonMatchDisclosureScopes" item="originNonMatchDisclosureScope" open="(" separator="OR" close=")">
                       TSSU.SCHM_SEQ = #{schedule.schmSeq}
                       AND TSSU.SCH_SEQ = #{schedule.schSeq}
                       AND TSSU.CDE_SEQ = #{originNonMatchDisclosureScope.cdeSeq}
                       AND TSSU.CDE_TYPE = #{originNonMatchDisclosureScope.cdeType}
                       AND TSSU.SCH_PARTITION_TYPE = 20
                       AND TSSU.USE_YND = 'Y'
                 </foreach>
             )
    </update>

</mapper>