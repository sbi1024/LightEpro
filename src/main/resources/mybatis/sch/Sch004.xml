<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.LightEpro.sch.mapper.SchMapper004">
    <select id="selectUserCount" resultType="int">
        /* selectUserCount */
        SELECT COUNT(1)
        FROM T_EM_COMP TEC
                 INNER JOIN T_EM_DEPT TED
                            ON TEC.COMP_SEQ = TED.COMP_SEQ
                                AND TEC.USE_YND = 'Y'
                                AND TED.USE_YND = 'Y'
                 INNER JOIN T_EM_EMP TEE
                            ON TED.DEPT_SEQ = TEE.DEPT_SEQ
                                AND TEE.USE_YND = 'Y'
                 INNER JOIN T_EM_EMP_MAPPING TEEM
                            ON TEC.COMP_SEQ = TEEM.COMP_SEQ
                                AND TED.DEPT_SEQ = TEEM.DEPT_SEQ
                                AND TEE.EMP_SEQ = TEEM.EMP_SEQ
                                AND TEEM.USE_YND = 'Y'
                 INNER JOIN T_EM_EMP_ACCOUNT TEEA
                            ON TEEM.EMP_SEQ = TEEA.EMP_SEQ
                                AND TEEA.USE_YND = 'Y'
        WHERE 1 = 1
          AND TEC.COMP_SEQ = #{user.userCompSeq}
          AND TED.DEPT_SEQ = #{user.userDeptSeq}
          AND TEE.EMP_SEQ = #{user.userSeq}
    </select>
    
    <select id="selectAuthorizedCalendarSequences" resultType="integer">
        /* selectAuthorizedCalendarSequences */
        SELECT TSC.CAL_SEQ
        FROM T_SC_CAL TSC
        WHERE 1 = 1
          AND TSC.CAL_SEQ > 0
          AND EXISTS(SELECT 1
                     FROM T_SC_CAL_USER TSCU
                     WHERE 1 = 1
                       AND TSC.CAL_SEQ = TSCU.CAL_SEQ
                       AND (TSCU.CDE_SEQ = #{user.userCompSeq} AND TSCU.CDE_TYPE = 'C' OR
                            TSCU.CDE_SEQ = #{user.userDeptSeq} AND TSCU.CDE_TYPE = 'D' OR
                            TSCU.CDE_SEQ = #{user.userSeq} AND TSCU.CDE_TYPE = 'I')
                       AND TSCU.USE_YND = 'Y')
          AND TSC.USE_YND = 'Y'
    </select>

    <select id="selectUnAuthorizedCalendarSequences" resultType="integer">
        /* selectUnAuthorizedCalendarSequences */
        SELECT TSC.CAL_SEQ
        FROM T_SC_CAL TSC
            INNER JOIN T_SC_CAL_USER TSCU
                        ON TSC.CAL_SEQ = TSCU.CAL_SEQ
                            AND TSC.CREATE_SEQ = TSCU.CDE_SEQ
                            AND TSCU.CDE_TYPE = 'I'
                            AND TSCU.CAL_PARTITION_TYPE = 100
                            AND TSCU.CAL_AUTHORITY = 'M'
                            AND TSC.USE_YND = 'Y'
                            AND TSCU.USE_YND = 'Y'
        WHERE 1 = 1
          AND TSC.CAL_SEQ > 0
          AND EXISTS(SELECT TSS.CAL_SEQ
                     FROM T_SC_SCH TSS
                        INNER JOIN T_SC_SCH_USER TSSU
                            ON TSS.SCHM_SEQ = TSSU.SCHM_SEQ
                             AND TSS.SCH_SEQ = TSSU.SCH_SEQ
                             AND (TSSU.CDE_SEQ = #{user.userCompSeq} AND TSSU.CDE_TYPE = 'C' OR
                                  TSSU.CDE_SEQ = #{user.userDeptSeq} AND TSSU.CDE_TYPE = 'D' OR
                                  TSSU.CDE_SEQ = #{user.userSeq} AND TSSU.CDE_TYPE = 'I')
                     WHERE 1 = 1
                      AND TSS.CAL_SEQ = TSC.CAL_SEQ
                      AND TSS.SCHM_SEQ > 0
                      AND TSS.SCH_SEQ > 0
                      AND TSS.USE_YND = 'Y'
                      AND TSSU.USE_YND = 'Y')
        <if test='originAuthorizedCalendarSequences != null and originAuthorizedCalendarSequences.size > 0'>
            AND TSC.CAL_SEQ NOT IN
            <foreach collection="originAuthorizedCalendarSequences" item="originAuthorizedCalendarSequence" open="(" separator="," close=")">
                #{originAuthorizedCalendarSequence}
            </foreach>
        </if>
    </select>

    <select id="selectSchedulesByAuthorizedCalendarSequencesAndDate" resultType="com.example.LightEpro.sch.dto.sch004.SchRsDto004$Schedule">
            /* selectSchedulesByAuthorizedCalendarSequencesAndDate */
            SELECT IFNULL(TSS.SCHM_SEQ, '')                   AS schmSeq,
                   IFNULL(TSS.SCH_SEQ, '')                    AS schSeq,
                   IFNULL(TSS.SCH_TITLE, '')                  AS schTitle,
                   IFNULL(TSS.SCH_CONTENT, '')                AS schContent,
                   DATE_FORMAT(TSS.START_DATE, '%Y%m%d%H%i')  AS startDate,
                   DATE_FORMAT(TSS.END_DATE, '%Y%m%d%H%i')    AS endDate,
                   IFNULL(TSS.ALL_DAY_YN, '')                 AS allDayYn,
                   IFNULL(TSS.CAL_SEQ,'')                     AS calSeq,
                   IFNULL(TSS.CREATE_SEQ, '')                 AS createSeq,
                   DATE_FORMAT(TSS.CREATE_DATE, '%Y%m%d%H%i') AS createDate,
                   IFNULL(TSS.MODIFY_SEQ, '')                 AS modifySeq,
                   CASE
                       WHEN TSS.MODIFY_DATE IS NOT NULL
                           THEN DATE_FORMAT(TSS.MODIFY_DATE, '%Y%m%d%H%i')
                       ELSE
                           ''
                       END                                    AS modifyDate
            FROM T_SC_SCH TSS
                     INNER JOIN T_SC_CAL TSC
                                ON TSS.CAL_SEQ = TSC.CAL_SEQ
                                 AND TSC.CAL_SEQ IN <foreach collection="calendar.authorizedCalendarSequences" item="calendar.authorizedCalendarSequence" open="(" separator="," close=")">
                                                        #{calendar.authorizedCalendarSequence}
                                                    </foreach>
                                 AND TSS.USE_YND = 'Y'
                                 AND TSC.USE_YND = 'Y'
            WHERE 1 = 1
              AND TSS.SCHM_SEQ > 0
              AND TSS.SCH_SEQ > 0
              AND EXISTS(SELECT 1
                         FROM T_SC_SCH T_EXISTS_SCH
                         WHERE 1 = 1
                          AND (T_EXISTS_SCH.START_DATE_YEAR = #{schedule.year} AND T_EXISTS_SCH.START_DATE_MONTH = #{schedule.month})
                          AND T_EXISTS_SCH.SCHM_SEQ = TSS.SCHM_SEQ
                          AND T_EXISTS_SCH.SCH_SEQ = TSS.SCH_SEQ

                          UNION ALL

                          SELECT 1
                          FROM T_SC_SCH T_EXISTS_SCH
                          WHERE 1 = 1
                           AND (T_EXISTS_SCH.END_DATE_YEAR = #{schedule.year} AND T_EXISTS_SCH.END_DATE_MONTH = #{schedule.month})
                           AND T_EXISTS_SCH.SCHM_SEQ = TSS.SCHM_SEQ
                           AND T_EXISTS_SCH.SCH_SEQ = TSS.SCH_SEQ

                          UNION ALL

                          SELECT 1
                          FROM T_SC_SCH T_EXISTS_SCH
                          WHERE 1 = 1
                           AND (<![CDATA[
                                  (T_EXISTS_SCH.START_DATE_YEAR <= #{schedule.year} AND T_EXISTS_SCH.START_DATE_MONTH < #{schedule.month}) AND
                                  (T_EXISTS_SCH.END_DATE_YEAR >= #{schedule.year} AND T_EXISTS_SCH.END_DATE_MONTH > #{schedule.month})
                               ]]>)
                           AND T_EXISTS_SCH.SCHM_SEQ = TSS.SCHM_SEQ
                           AND T_EXISTS_SCH.SCH_SEQ = TSS.SCH_SEQ)
              AND EXISTS(SELECT 1
                         FROM T_SC_SCH_USER TSSU
                         WHERE 1 = 1
                           AND TSSU.SCHM_SEQ = TSS.SCHM_SEQ
                           AND TSSU.SCH_SEQ = TSS.SCH_SEQ
                           AND TSSU.CDE_SEQ = TSS.CREATE_SEQ
                           AND TSSU.CDE_TYPE = 'I'
                           AND TSSU.SCH_PARTITION_TYPE = '10'
                           AND TSSU.SCH_AUTHORITY = 'M'
                           AND TSSU.USE_YND = 'Y')
    </select>

    <select id="selectSchedulesByUnAuthorizedCalendarSequencesAndDate" resultType="com.example.LightEpro.sch.dto.sch004.SchRsDto004$Schedule">
        /* selectSchedulesByUnAuthorizedCalendarSequencesAndDate */
        SELECT IFNULL(TSS.SCHM_SEQ, '')                   AS schmSeq,
                   IFNULL(TSS.SCH_SEQ, '')                    AS schSeq,
                   IFNULL(TSS.SCH_TITLE, '')                  AS schTitle,
                   IFNULL(TSS.SCH_CONTENT, '')                AS schContent,
                   DATE_FORMAT(TSS.START_DATE, '%Y%m%d%H%i')  AS startDate,
                   DATE_FORMAT(TSS.END_DATE, '%Y%m%d%H%i')    AS endDate,
                   IFNULL(TSS.ALL_DAY_YN, '')                 AS allDayYn,
                   IFNULL(TSS.CAL_SEQ,'')                     AS calSeq,
                   IFNULL(TSS.CREATE_SEQ, '')                 AS createSeq,
                   DATE_FORMAT(TSS.CREATE_DATE, '%Y%m%d%H%i') AS createDate,
                   IFNULL(TSS.MODIFY_SEQ, '')                 AS modifySeq,
                   CASE
                       WHEN TSS.MODIFY_DATE IS NOT NULL
                           THEN DATE_FORMAT(TSS.MODIFY_DATE, '%Y%m%d%H%i')
                       ELSE
                           ''
                       END                                    AS modifyDate
            FROM T_SC_SCH TSS
                     INNER JOIN T_SC_CAL TSC
                                ON TSS.CAL_SEQ = TSC.CAL_SEQ
                                 AND TSC.CAL_SEQ IN <foreach collection="calendar.unAuthorizedCalendarSequences" item="calendar.unAuthorizedCalendarSequence" open="(" separator="," close=")">
                                                        #{calendar.unAuthorizedCalendarSequence}
                                                    </foreach>
                                 AND TSS.USE_YND = 'Y'
                                 AND TSC.USE_YND = 'Y'
            WHERE 1 = 1
              AND TSS.SCHM_SEQ > 0
              AND TSS.SCH_SEQ > 0
              AND EXISTS(SELECT 1
                         FROM T_SC_SCH T_EXISTS_SCH
                         WHERE 1 = 1
                          AND (T_EXISTS_SCH.START_DATE_YEAR = #{schedule.year} AND T_EXISTS_SCH.START_DATE_MONTH = #{schedule.month})
                          AND T_EXISTS_SCH.SCHM_SEQ = TSS.SCHM_SEQ
                          AND T_EXISTS_SCH.SCH_SEQ = TSS.SCH_SEQ

                          UNION ALL

                          SELECT 1
                          FROM T_SC_SCH T_EXISTS_SCH
                          WHERE 1 = 1
                           AND (T_EXISTS_SCH.END_DATE_YEAR = #{schedule.year} AND T_EXISTS_SCH.END_DATE_MONTH = #{schedule.month})
                           AND T_EXISTS_SCH.SCHM_SEQ = TSS.SCHM_SEQ
                           AND T_EXISTS_SCH.SCH_SEQ = TSS.SCH_SEQ

                          UNION ALL

                          SELECT 1
                          FROM T_SC_SCH T_EXISTS_SCH
                          WHERE 1 = 1
                           AND (<![CDATA[
                                  (T_EXISTS_SCH.START_DATE_YEAR <= #{schedule.year} AND T_EXISTS_SCH.START_DATE_MONTH < #{schedule.month}) AND
                                  (T_EXISTS_SCH.END_DATE_YEAR >= #{schedule.year} AND T_EXISTS_SCH.END_DATE_MONTH > #{schedule.month})
                               ]]>)
                           AND T_EXISTS_SCH.SCHM_SEQ = TSS.SCHM_SEQ
                           AND T_EXISTS_SCH.SCH_SEQ = TSS.SCH_SEQ)
              AND EXISTS(SELECT 1
                         FROM T_SC_SCH_USER TSSU
                         WHERE 1 = 1
                           AND TSSU.SCHM_SEQ = TSS.SCHM_SEQ
                           AND TSSU.SCH_SEQ = TSS.SCH_SEQ
                           AND (TSSU.CDE_SEQ = #{user.userCompSeq} AND TSSU.CDE_TYPE = 'C' OR
                                TSSU.CDE_SEQ = #{user.userDeptSeq} AND TSSU.CDE_TYPE = 'D' OR
                                TSSU.CDE_SEQ = #{user.userSeq} AND TSSU.CDE_TYPE = 'I')
                           AND TSSU.USE_YND = 'Y')
    </select>
</mapper>